// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Kessleract.Pb {

  /// <summary>Holder for reflection information generated from service.proto</summary>
  public static partial class ServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1zZXJ2aWNlLnByb3RvEg1rZXNzbGVyYWN0LnBiGg5tZXNzYWdlcy5wcm90",
            "byJICg1VcGxvYWRSZXF1ZXN0EgwKBGJvZHkYASABKAUSKQoGdmVzc2VsGAIg",
            "ASgLMhkua2Vzc2xlcmFjdC5wYi5WZXNzZWxTcGVjIiEKDlVwbG9hZFJlc3Bv",
            "bnNlEg8KB3N1Y2Nlc3MYASABKAgiRgoPRG93bmxvYWRSZXF1ZXN0EgwKBGJv",
            "ZHkYASABKAUSFwoPZXhjbHVkZWRfaGFzaGVzGAIgAygFEgwKBHRha2UYAyAB",
            "KAUiRAoQRG93bmxvYWRSZXNwb25zZRIwCgd2ZXNzZWxzGAEgAygLMh8ua2Vz",
            "c2xlcmFjdC5wYi5VbmlxdWVWZXNzZWxTcGVjIksKEFVuaXF1ZVZlc3NlbFNw",
            "ZWMSKQoGdmVzc2VsGAEgASgLMhkua2Vzc2xlcmFjdC5wYi5WZXNzZWxTcGVj",
            "EgwKBGhhc2gYAiABKAUiQAoLVm90ZVJlcXVlc3QSDAoEYm9keRgBIAEoBRIT",
            "Cgt2ZXNzZWxfaGFzaBgCIAEoBRIOCgZ1cHZvdGUYAyABKAhiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Kessleract.Pb.MessagesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Kessleract.Pb.UploadRequest), global::Kessleract.Pb.UploadRequest.Parser, new[]{ "Body", "Vessel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kessleract.Pb.UploadResponse), global::Kessleract.Pb.UploadResponse.Parser, new[]{ "Success" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kessleract.Pb.DownloadRequest), global::Kessleract.Pb.DownloadRequest.Parser, new[]{ "Body", "ExcludedHashes", "Take" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kessleract.Pb.DownloadResponse), global::Kessleract.Pb.DownloadResponse.Parser, new[]{ "Vessels" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kessleract.Pb.UniqueVesselSpec), global::Kessleract.Pb.UniqueVesselSpec.Parser, new[]{ "Vessel", "Hash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kessleract.Pb.VoteRequest), global::Kessleract.Pb.VoteRequest.Parser, new[]{ "Body", "VesselHash", "Upvote" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UploadRequest : pb::IMessage<UploadRequest> {
    private static readonly pb::MessageParser<UploadRequest> _parser = new pb::MessageParser<UploadRequest>(() => new UploadRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kessleract.Pb.ServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadRequest(UploadRequest other) : this() {
      body_ = other.body_;
      vessel_ = other.vessel_ != null ? other.vessel_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadRequest Clone() {
      return new UploadRequest(this);
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 1;
    private int body_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    /// <summary>Field number for the "vessel" field.</summary>
    public const int VesselFieldNumber = 2;
    private global::Kessleract.Pb.VesselSpec vessel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kessleract.Pb.VesselSpec Vessel {
      get { return vessel_; }
      set {
        vessel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Body != other.Body) return false;
      if (!object.Equals(Vessel, other.Vessel)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Body != 0) hash ^= Body.GetHashCode();
      if (vessel_ != null) hash ^= Vessel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Body != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Body);
      }
      if (vessel_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Vessel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Body != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Body);
      }
      if (vessel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Vessel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadRequest other) {
      if (other == null) {
        return;
      }
      if (other.Body != 0) {
        Body = other.Body;
      }
      if (other.vessel_ != null) {
        if (vessel_ == null) {
          Vessel = new global::Kessleract.Pb.VesselSpec();
        }
        Vessel.MergeFrom(other.Vessel);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Body = input.ReadInt32();
            break;
          }
          case 18: {
            if (vessel_ == null) {
              Vessel = new global::Kessleract.Pb.VesselSpec();
            }
            input.ReadMessage(Vessel);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadResponse : pb::IMessage<UploadResponse> {
    private static readonly pb::MessageParser<UploadResponse> _parser = new pb::MessageParser<UploadResponse>(() => new UploadResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kessleract.Pb.ServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadResponse(UploadResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadResponse Clone() {
      return new UploadResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DownloadRequest : pb::IMessage<DownloadRequest> {
    private static readonly pb::MessageParser<DownloadRequest> _parser = new pb::MessageParser<DownloadRequest>(() => new DownloadRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownloadRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kessleract.Pb.ServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadRequest(DownloadRequest other) : this() {
      body_ = other.body_;
      excludedHashes_ = other.excludedHashes_.Clone();
      take_ = other.take_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadRequest Clone() {
      return new DownloadRequest(this);
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 1;
    private int body_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    /// <summary>Field number for the "excluded_hashes" field.</summary>
    public const int ExcludedHashesFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_excludedHashes_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> excludedHashes_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ExcludedHashes {
      get { return excludedHashes_; }
    }

    /// <summary>Field number for the "take" field.</summary>
    public const int TakeFieldNumber = 3;
    private int take_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Take {
      get { return take_; }
      set {
        take_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownloadRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownloadRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Body != other.Body) return false;
      if(!excludedHashes_.Equals(other.excludedHashes_)) return false;
      if (Take != other.Take) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Body != 0) hash ^= Body.GetHashCode();
      hash ^= excludedHashes_.GetHashCode();
      if (Take != 0) hash ^= Take.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Body != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Body);
      }
      excludedHashes_.WriteTo(output, _repeated_excludedHashes_codec);
      if (Take != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Take);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Body != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Body);
      }
      size += excludedHashes_.CalculateSize(_repeated_excludedHashes_codec);
      if (Take != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Take);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownloadRequest other) {
      if (other == null) {
        return;
      }
      if (other.Body != 0) {
        Body = other.Body;
      }
      excludedHashes_.Add(other.excludedHashes_);
      if (other.Take != 0) {
        Take = other.Take;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Body = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            excludedHashes_.AddEntriesFrom(input, _repeated_excludedHashes_codec);
            break;
          }
          case 24: {
            Take = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DownloadResponse : pb::IMessage<DownloadResponse> {
    private static readonly pb::MessageParser<DownloadResponse> _parser = new pb::MessageParser<DownloadResponse>(() => new DownloadResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownloadResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kessleract.Pb.ServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadResponse(DownloadResponse other) : this() {
      vessels_ = other.vessels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadResponse Clone() {
      return new DownloadResponse(this);
    }

    /// <summary>Field number for the "vessels" field.</summary>
    public const int VesselsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Kessleract.Pb.UniqueVesselSpec> _repeated_vessels_codec
        = pb::FieldCodec.ForMessage(10, global::Kessleract.Pb.UniqueVesselSpec.Parser);
    private readonly pbc::RepeatedField<global::Kessleract.Pb.UniqueVesselSpec> vessels_ = new pbc::RepeatedField<global::Kessleract.Pb.UniqueVesselSpec>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Kessleract.Pb.UniqueVesselSpec> Vessels {
      get { return vessels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownloadResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownloadResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!vessels_.Equals(other.vessels_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= vessels_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      vessels_.WriteTo(output, _repeated_vessels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += vessels_.CalculateSize(_repeated_vessels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownloadResponse other) {
      if (other == null) {
        return;
      }
      vessels_.Add(other.vessels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            vessels_.AddEntriesFrom(input, _repeated_vessels_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UniqueVesselSpec : pb::IMessage<UniqueVesselSpec> {
    private static readonly pb::MessageParser<UniqueVesselSpec> _parser = new pb::MessageParser<UniqueVesselSpec>(() => new UniqueVesselSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UniqueVesselSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kessleract.Pb.ServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UniqueVesselSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UniqueVesselSpec(UniqueVesselSpec other) : this() {
      vessel_ = other.vessel_ != null ? other.vessel_.Clone() : null;
      hash_ = other.hash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UniqueVesselSpec Clone() {
      return new UniqueVesselSpec(this);
    }

    /// <summary>Field number for the "vessel" field.</summary>
    public const int VesselFieldNumber = 1;
    private global::Kessleract.Pb.VesselSpec vessel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kessleract.Pb.VesselSpec Vessel {
      get { return vessel_; }
      set {
        vessel_ = value;
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 2;
    private int hash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hash {
      get { return hash_; }
      set {
        hash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UniqueVesselSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UniqueVesselSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Vessel, other.Vessel)) return false;
      if (Hash != other.Hash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (vessel_ != null) hash ^= Vessel.GetHashCode();
      if (Hash != 0) hash ^= Hash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (vessel_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Vessel);
      }
      if (Hash != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Hash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (vessel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Vessel);
      }
      if (Hash != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UniqueVesselSpec other) {
      if (other == null) {
        return;
      }
      if (other.vessel_ != null) {
        if (vessel_ == null) {
          Vessel = new global::Kessleract.Pb.VesselSpec();
        }
        Vessel.MergeFrom(other.Vessel);
      }
      if (other.Hash != 0) {
        Hash = other.Hash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (vessel_ == null) {
              Vessel = new global::Kessleract.Pb.VesselSpec();
            }
            input.ReadMessage(Vessel);
            break;
          }
          case 16: {
            Hash = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VoteRequest : pb::IMessage<VoteRequest> {
    private static readonly pb::MessageParser<VoteRequest> _parser = new pb::MessageParser<VoteRequest>(() => new VoteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kessleract.Pb.ServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteRequest(VoteRequest other) : this() {
      body_ = other.body_;
      vesselHash_ = other.vesselHash_;
      upvote_ = other.upvote_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteRequest Clone() {
      return new VoteRequest(this);
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 1;
    private int body_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    /// <summary>Field number for the "vessel_hash" field.</summary>
    public const int VesselHashFieldNumber = 2;
    private int vesselHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VesselHash {
      get { return vesselHash_; }
      set {
        vesselHash_ = value;
      }
    }

    /// <summary>Field number for the "upvote" field.</summary>
    public const int UpvoteFieldNumber = 3;
    private bool upvote_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Upvote {
      get { return upvote_; }
      set {
        upvote_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Body != other.Body) return false;
      if (VesselHash != other.VesselHash) return false;
      if (Upvote != other.Upvote) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Body != 0) hash ^= Body.GetHashCode();
      if (VesselHash != 0) hash ^= VesselHash.GetHashCode();
      if (Upvote != false) hash ^= Upvote.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Body != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Body);
      }
      if (VesselHash != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(VesselHash);
      }
      if (Upvote != false) {
        output.WriteRawTag(24);
        output.WriteBool(Upvote);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Body != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Body);
      }
      if (VesselHash != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VesselHash);
      }
      if (Upvote != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoteRequest other) {
      if (other == null) {
        return;
      }
      if (other.Body != 0) {
        Body = other.Body;
      }
      if (other.VesselHash != 0) {
        VesselHash = other.VesselHash;
      }
      if (other.Upvote != false) {
        Upvote = other.Upvote;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Body = input.ReadInt32();
            break;
          }
          case 16: {
            VesselHash = input.ReadInt32();
            break;
          }
          case 24: {
            Upvote = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
