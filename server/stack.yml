version: '3.8'
services:
  server:
    image: kessleract-server:0.0.1-SNAPSHOT
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=servernet"
      - "traefik.http.routers.kessleract.rule=Host(`kessleract.click`)"
      - "traefik.http.routers.kessleract.entrypoints=websecure"
      - "traefik.http.routers.kessleract.tls.certresolver=myresolver"
      - "traefik.http.routers.kessleract.middlewares=kessleract-ratelimit"
      - "traefik.http.services.kessleract.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.kessleract-ratelimit.ratelimit.average=10"
      - "traefik.http.middlewares.kessleract-ratelimit.ratelimit.period=1m"
      - "traefik.http.middlewares.kessleract-ratelimit.ratelimit.burst=20"
    depends_on:
      - db
    environment:
      DB_URL: jdbc:postgresql://db:5432/kessleract
      DB_USER: kessleract
      DB_PASSWORD_FILE: /run/secrets/kessleract-db-password
      PORT: 8080
    secrets:
      - kessleract-db-password
    networks:
      - servernet
      - default
  db:
    image: postgres:18
    environment:
      POSTGRES_DB: kessleract
      POSTGRES_USER: kessleract
      POSTGRES_PASSWORD_FILE: /run/secrets/kessleract-db-password
    secrets:
      - kessleract-db-password
    volumes:
      - db_data:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kessleract"]
      interval: 2s
      timeout: 5s
      retries: 10
  adminer:
    image: adminer:latest
    ports:
      - 8080:8080

networks:
  servernet:
    external: true

volumes:
  db_data:

secrets:
  kessleract-db-password:
    external: true